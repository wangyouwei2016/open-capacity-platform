spring:
  shardingsphere:
    sharding:
      default-data-source-name: ds0
      default-key-generator:
        column: id
        props:
          worker:
            id: ${workerId}
        type: SNOWFLAKE
    datasource:
      names: ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${ocp.datasource.ip:192.168.92.216}:3306/oauth-center?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
        username: ${ocp.datasource.username}
        password: ${ocp.datasource.password}
        #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
        initial-size: 5
        #最大连接数
        max-active: 50 
        #最小连接数
        min-idle: 5 
        #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
        max-wait: 60000
        #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
        validation-query: SELECT 1 FROM DUAL
        #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
        validation-query-timeout: 5 
        #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        test-while-idle: true 
        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        test-on-borrow: false 
        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        test-on-return: false 
        #有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
        time-between-eviction-runs-millis: 60000   
        # 连接保持空闲而不被驱逐的最小时间
        min-evictable-idle-time-millis: 300000 
        #连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
        keep-alive: true 
         # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true 
        #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
        pool-prepared-statements: false 
         #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
        max-pool-prepared-statement-per-connection-size: 100
        #是否到期强制删除,避免某个连接长时间阻塞无法回收
        remove-abandoned: true
        #租用时长，Druid避免连泄露 s
        remove-abandoned-timeout: 120  
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall
        #合并多个DruidDataSource的监控数据
        use-global-data-source-stat: false
        #配置stat-view-servlet
        stat-view-servlet:
          #允许开启监控
          enabled: true
          #监控面板路径
          url-pattern: /druid/*
          
  cloud:
    gateway:
      discovery:
        locator:
          lowerCaseServiceId: true
      routes:
        - id: auth
          uri: lb://auth-server
          predicates:
            - Path=/api-auth/**
          filters:
            - RequestTrace=true
            - StripPrefix=0
            - PreserveHostHeader
        - id: user
          uri: lb://user-center
          predicates:
            - Path=/api-user/**
          filters:
            - RequestTrace=true
            - StripPrefix=1
        - id: file
          uri: lb://file-center
          predicates:
            - Path=/api-file/**
          filters:
            - RequestTrace=true
            - StripPrefix=1
        - id: log
          uri: lb://log-center
          predicates:
            - Path=/api-log/**
          filters:
            - RequestTrace=true
            - StripPrefix=1
        - id: sms
          uri: lb://sms-center
          predicates:
            - Path=/api-sms/**
          filters:
            - RequestTrace=true
            - StripPrefix=1    
        - id: generator
          uri: lb://codegen-center
          predicates:
            - Path=/api-generator/**
          filters:
            - RequestTrace=true
            - StripPrefix=1
            

# 限流
#    sentinel:
#      scg:
#        fallback:
#          mode: response
#          response-status: 429
#          response-body: "{'statusCodeValue':'429' , 'msg':'接口限流了'}"
#      datasource : 
#        flow:
#          nacos:
#            server-addr: 127.0.0.1:8848
#            dataId: ${spring.application.name}-gateway-flow-rules
#            groupId: SENTINEL_GROUP
#            data-type: json
#            username: nacos
#            password: nacos
#            # 规则类型，取值见：
#            # com.alibaba.cloud.sentinel.datasource.RuleType
#            rule-type: gw-flow          # 设置 gateway flow 流控规则类型
#      filter:
#        enabled: true


mybatis-plus:
  mapper-locations:  com/open/**/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.open.capacity.oauth.model
  global-config:
    banner: false
    db-config:
      id-type: auto

ocp:
  swagger-agg:
    generate-routes: user,file
  oauth2:
    token:
      store:
        type: redis
  cache-manager:
    configs:
      - key: auth
        second: 1800      
  security:
    actuator:
      enable: true
    ignore:
      # 忽略认证的地址
      httpUrls: >
        /api-auth/monitoring**,
        /api-user/monitoring**,
        /api-file/monitoring**,
        /api-log/monitoring**,
        /api-auth/oauth/**,
        /api-auth/tokens/**,
        /api-auth/websocket/**,
        /api-auth/validata/**,
        /api-auth/css/**,
        /api-auth/images/**,
        /api-auth/js/**,
        /actuator/**,
        /login.html,
        /user/login,
        /routes/**,
        /api-auth/tokens/key
    auth:
      urlPermission:
        #是否开启url级别权限
        enable: false
        #配置只进行登录认证，不进行url权限认证的api
        ignoreUrls: >
          /api-user/menus/current,
          /api-user/users/current,
          /api-user/monitoring**,
          /api-auth/monitoring**,
          /api-file/monitoring**,
          /api-log/monitoring**,
          /api-log/requestStat ,
        #白名单
        includeClientIds:
          - webApp
      renew:
        #是否开启token自动续签（目前只有redis实现）
        enable: true
        #白名单
        includeClientIds:
          - webApp
